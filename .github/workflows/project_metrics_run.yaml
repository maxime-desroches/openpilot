name: project metrics run
on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
    outputs:
      setup_time:
        value: ${{ jobs.setup.outputs.setup_time }}
      build_time:
        value: ${{ jobs.setup.outputs.build_time }}
      git_size:
        value: ${{ jobs.setup.outputs.git_size }}
      python_venv_size:
        value: ${{ jobs.setup.outputs.python_venv_size }}
      python_packages_count:
        value: ${{ jobs.setup.outputs.python_packages_count }}

concurrency:
  group: project_metrics_run_${{ inputs.platform }}_${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ${{ inputs.platform }}
    outputs:
      setup_time: ${{ steps.setup_time.outputs.output }}
      build_time: ${{ steps.build_time.outputs.output }}
      git_size: ${{ steps.git_size.outputs.output }}
      python_venv_size: ${{ steps.python_venv_size.outputs.output }}
      python_packages_count: ${{ steps.python_packages_count.outputs.output }}
    steps:
      - id: setup_time
        name: Setup time
        run: |
          exec 3>&1 4>&2
          output=$({ time curl -fsSL openpilot.comma.ai | bash 1>&3 2>&4; } 2>&1 | tail -n3 | head -n1 | cut -f2)
          echo "output=$output" >> $GITHUB_OUTPUT
      - name: Activating venv
        run: |
          echo "openpilot/.venv/bin" >> $GITHUB_PATH
      - id: build_time
        name: Build time
        run: |
          exec 3>&1 4>&2
          output=$({ cd openpilot && source .venv/bin/activate && time scons --no-cache 1>&3 2>&4; } 2>&1 | tail -n3 | head -n1 | cut -f2)
          echo "output=$output" >> $GITHUB_OUTPUT
      - id: git_size
        name: git folder size
        run: |
          output=$(du -hs openpilot/.git | cut -f1)
          echo "output=$output" >> $GITHUB_OUTPUT
      - id: python_venv_size
        name: Python venv size
        run: |
          output=$(du -hs openpilot/.venv | cut -f1)
          echo "output=$output" >> $GITHUB_OUTPUT
      - id: python_packages_count
        name: Python packages count
        run: |
          output=$(uv pip list | tail -n +3 | wc -l)
          echo "output=$output" >> $GITHUB_OUTPUT
